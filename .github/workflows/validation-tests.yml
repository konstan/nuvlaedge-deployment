name: "NuvlaEdge Device and System validation tests"

on:
  push:
    branches:
      - "validation-tests"
    pull_request:
  workflow_dispatch:

defaults:
 run:
  working-directory: ./validation

jobs:
  validate-release:
    runs-on: validation-runner
    strategy:
      matrix:
        board-config: [ "rpi4.toml", "ubuntu_vm.toml" ]
        validation-type: [ "basic_tests", "nuvla_operations" ]

    steps:
      - name: CheckOut validation packages
        run: |
          curl -i -u "${{ secrets.VALIDATION_TOKEN_USERNAME }}:${{ secrets.VALIDATION_TOKEN_SECRET }}" \
          -H 'Accept: application/vnd.github.v3.raw' \
          -O --create-dirs --output-dir conf/targets/ \
          -L "https://api.github.com/repos/nuvlaedge/validation/contents/conf/targets/${{ matrix.board-config }}" \
          

      - name: Gather System configuration
        run: |
          curl -i -u "${{ secrets.VALIDATION_TOKEN_USERNAME }}:${{ secrets.VALIDATION_TOKEN_SECRET }}" \
          -H 'Accept: application/vnd.github.v3.raw' \
          -O -L "https://api.github.com/repos/nuvlaedge/validation/contents/dist/validation-0.0.1-py3-none-any.whl"

      - name: Setup Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.8'

      - name: Install Validation Framework dependency
        run: pip install validation-0.0.1-py3-none-any.whl  --force-reinstall

      - name: Setup results folder
        run: |
          mkdir -p temp_results/xml temp_results/json

      - name: Run Validation on board ${{ matrix.board-config }}
        run: python -m validation_framework --target ${{ matrix.board-config }} --validator ${{ matrix.validation-type }}

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          junit_files: "temp_results/xml/*.xml"

#      - name: Clean up after validation
#        run: |
#          rm -rf ./* || true